<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<!-- Define Colors -->
	<Color x:Key="BackgroundColor">#121212</Color>
	<Color x:Key="SecondaryBackgroundColor">#1e1e1e</Color>
	<Color x:Key="ComboBoxBackgroundColor">#2e2e2e</Color>
	<Color x:Key="ButtonBackgroundColor">#333</Color>
	<Color x:Key="TextColor">White</Color>
	<Color x:Key="HighlightColor">#444</Color>
	<Color x:Key="ButtonHighlightColor">#444</Color>
	<Color x:Key="DataGridHeaderBackgroundColor">#333</Color>
	<Color x:Key="DataGridRowBackgroundColor">#222</Color>
	<Color x:Key="DataGridAlternatingRowBackgroundColor">#222</Color>
	<Color x:Key="MenuBackgroundColor">#1e1e1e</Color>
	<Color x:Key="MenuItemBackgroundColor">#333</Color>
	<Color x:Key="MenuItemHighlightColor">#444</Color>

	<!-- Define Brushes -->
	<SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}" />
	<SolidColorBrush x:Key="SecondaryBackgroundBrush" Color="{StaticResource SecondaryBackgroundColor}" />
	<SolidColorBrush x:Key="ComboBoxBackgroundBrush" Color="{StaticResource ComboBoxBackgroundColor}" />
	<SolidColorBrush x:Key="ButtonBackgroundBrush" Color="{StaticResource ButtonBackgroundColor}" />
	<SolidColorBrush x:Key="TextBrush" Color="{StaticResource TextColor}" />
	<SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource HighlightColor}" />
	<SolidColorBrush x:Key="ButtonHighlightBrush" Color="{StaticResource HighlightColor}" />
	<SolidColorBrush x:Key="DataGridHeaderBackgroundBrush" Color="{StaticResource DataGridHeaderBackgroundColor}" />
	<SolidColorBrush x:Key="DataGridRowBackgroundBrush" Color="{StaticResource DataGridRowBackgroundColor}" />
	<SolidColorBrush x:Key="DataGridAlternatingRowBackgroundBrush" Color="{StaticResource DataGridAlternatingRowBackgroundColor}" />
	<SolidColorBrush x:Key="MenuBackgroundBrush" Color="{StaticResource MenuBackgroundColor}" />
	<SolidColorBrush x:Key="MenuItemBackgroundBrush" Color="{StaticResource MenuItemBackgroundColor}" />
	<SolidColorBrush x:Key="MenuItemHighlightBrush" Color="{StaticResource MenuItemHighlightColor}" />




	<!-- Define Window Style -->
	<Style TargetType="Window">
		<Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
	</Style>

	<!-- Define DockPanel Style -->
	<Style TargetType="DockPanel">
		<Setter Property="Background" Value="{StaticResource SecondaryBackgroundBrush}" />
	</Style>

	<!-- Define Menu Style -->
	<Style TargetType="Menu">
		<Setter Property="Background" Value="{StaticResource SecondaryBackgroundBrush}" />
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
	</Style>

	<!-- Define MenuItem Style -->
	<Style TargetType="MenuItem">
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
		<Setter Property="Background" Value="{StaticResource SecondaryBackgroundBrush}" />
	</Style>

	<!-- Define Button Style -->
	<Style TargetType="Button">
		<Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
		<Setter Property="BorderBrush" Value="{StaticResource TextBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="10" />
		<Setter Property="Margin" Value="5" />
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="Height" Value="40"/>
		<Setter Property="Width" Value="120"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5"
                            SnapsToDevicePixels="True">
						<ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          Margin="{TemplateBinding Padding}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Define Smaller Button Style -->
	<Style TargetType="Button" x:Key="SmallButtonStyle">
		<Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}" />
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
		<Setter Property="BorderBrush" Value="{StaticResource TextBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="5" />
		<Setter Property="Margin" Value="3" />
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="FontWeight" Value="Regular"/>
		<Setter Property="Height" Value="30"/>
		<Setter Property="Width" Value="100"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5"
                            SnapsToDevicePixels="True">
						<ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          Margin="{TemplateBinding Padding}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Define Label Style -->
	<Style TargetType="Label">
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
	</Style>

	<!-- Define ComboBox Style -->
	<Style TargetType="ComboBox">
		<Setter Property="Background" Value="{StaticResource ComboBoxBackgroundBrush}" />
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="BorderBrush" Value="Black" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="5" />
		<Setter Property="Margin" Value="5" />
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="Height" Value="30"/>
		<Setter Property="Width" Value="120"/>
	</Style>

	<!-- Define ComboBoxItem Style -->
	<Style TargetType="ComboBoxItem">
		<Setter Property="Background" Value="{StaticResource ComboBoxBackgroundBrush}" />
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
		<Setter Property="Padding" Value="5" />
		<Setter Property="BorderBrush" Value="{StaticResource TextBrush}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontWeight" Value="Bold"/>
	</Style>

	<!-- Define ComboBox's Popup Style -->
	<Style TargetType="ComboBox" x:Key="ComboBoxPopupStyle">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<ToggleButton Name="ToggleButton"
                                      IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="false"
                                      ClickMode="Press"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Padding="{TemplateBinding Padding}" />
						<ContentPresenter Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" />
						<Popup Name="Popup"
                               Placement="Bottom"
                               AllowsTransparency="True"
                               PopupAnimation="Slide">
							<Grid Name="Dropdown"
                                  SnapsToDevicePixels="True"
                                  Background="{StaticResource ComboBoxBackgroundBrush}">
								<Border x:Name="Border"
                                        Background="{StaticResource ComboBoxBackgroundBrush}"
                                        BorderBrush="{StaticResource TextBrush}"
                                        BorderThickness="1" />
								<ScrollViewer Margin="4"
                                              SnapsToDevicePixels="True">
									<ItemsPresenter />
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Define TextBox Style -->
	<Style TargetType="TextBox">
		<Setter Property="Background" Value="{StaticResource ComboBoxBackgroundBrush}" />
		<Setter Property="Foreground" Value="Red" />
		<Setter Property="BorderBrush" Value="{StaticResource TextBrush}" />
		<Setter Property="BorderThickness" Value="1"/>
	</Style>

	<!-- Define Border Style -->
	<Style TargetType="Border">
		<Setter Property="BorderBrush" Value="{StaticResource TextBrush}" />
		<Setter Property="BorderThickness" Value="1"/>
	</Style>

	<!-- Define ScrollViewer Style -->
	<Style TargetType="ScrollViewer">
		<Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
	</Style>

	<!-- Define Hyperlink Style -->
	<Style TargetType="Hyperlink">
		<Setter Property="Foreground" Value="{StaticResource HighlightBrush}" />
	</Style>

	<!-- Define DataGrid Style -->
	<Style TargetType="DataGrid">
		<Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
		<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
		<Setter Property="AlternatingRowBackground" Value="{StaticResource DataGridAlternatingRowBackgroundBrush}" />
		<Setter Property="RowBackground" Value="{StaticResource DataGridRowBackgroundBrush}" />
		<Setter Property="ColumnHeaderStyle">
			<Setter.Value>
				<Style TargetType="DataGridColumnHeader">
					<Setter Property="Background" Value="{StaticResource DataGridHeaderBackgroundBrush}" />
					<Setter Property="Foreground" Value="{StaticResource TextBrush}" />
					<Setter Property="FontWeight" Value="Bold" />
					<Setter Property="Padding" Value="5" />
					<Setter Property="BorderBrush" Value="{StaticResource TextBrush}" />
					<Setter Property="BorderThickness" Value="1" />
					<Setter Property="HorizontalContentAlignment" Value="Center" />
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="CellStyle">
			<Setter.Value>
				<Style TargetType="DataGridCell">
					<Setter Property="Padding" Value="5" />
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="RowHeaderWidth" Value="40"/>
	</Style>


</ResourceDictionary>
